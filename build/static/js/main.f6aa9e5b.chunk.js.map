{"version":3,"sources":["TodoInput.js","TodoItem.js","SignInForm.js","SignUpForm.js","UserDialog.js","App.js","serviceWorker.js","index.js"],"names":["TodoInput","e","key","this","props","onSubmit","onChange","react_default","a","createElement","type","placeholder","value","content","onKeyPress","submit","bind","changeTitle","Component","TodoItem","onToggle","todo","onDelete","checked","status","toggle","title","onClick","delete","SignInForm","call","className","clickButton","href","SignUpForm","UserDialog","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","selected","setState","fill","points","class","SignInForm_SignInForm","changeSelected","id","App","newTodo","todoList","push","target","states","deleted","_this2","todos","filter","item","map","index","TodoItem_TodoItem","TodoInput_TodoInput","addTodo","UserDialog_UserDialog","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f6aa9e5b.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class TodoInput extends Component {\n    submit(e) {\n        if (e.key === 'Enter') {\n            this.props.onSubmit(e);\n        }\n    }\n    changeTitle(e) {\n        this.props.onChange(e);\n    }\n    render() {\n        return <input type=\"text\" placeholder=\"添加任务\"\n            value={this.props.content}\n            onKeyPress={this.submit.bind(this)}\n            onChange={this.changeTitle.bind(this)} />\n    }\n}","import React, { Component } from 'react';\n\nexport default class TodoItem extends Component {\n    toggle(e) {\n        this.props.onToggle(e, this.props.todo);\n    }\n    delete(e) {\n        this.props.onDelete(e, this.props.todo);\n    }\n    render() {\n        return (\n            <div>\n                <div>\n                    <input type=\"checkbox\"\n                        checked={this.props.todo.status === 'completed'}\n                        onChange={this.toggle.bind(this)}\n                    />{this.props.todo.title}\n                </div>\n                <button onClick={this.delete.bind(this)}>删除</button>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { directive } from '@babel/types';\n\nexport default class SignInForm extends Component {\n    clickButton() {\n        this.props.onChange.call();\n    }\n    render() {\n        return (\n            <div>\n                <form className=\"signIn\">\n                    <div className=\"welcome\">\n                        <span>欢迎回来</span>\n                    </div>\n                    <div className=\"row\">\n                        <input type=\"text\" placeholder=\"邮箱登录\" />\n                    </div>\n                    <div className=\"row\">\n                        <input type=\"password\" placeholder=\"登录密码\" />\n                    </div>\n                    <div className=\"signInOrSignUp\">\n                        <button type=\"submit\">登录</button>\n                        <button onClick={this.clickButton.bind(this)}>注册</button>\n                        <a href=\"#\">忘记密码？</a>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default function () {\n    return (\n        <div>\n            <form className=\"signUp\">\n                <div className=\"row\">\n                    <input type=\"text\" placeholder=\"someone@example.com\" />\n                </div>\n                <div className=\"row\">\n                    <input type=\"password\" placeholder=\"区分大小写\" />\n                </div>\n                <button type=\"submit\">注册</button>\n                <a href=\"#\">返回登录</a>\n            </form>\n        </div>\n    )\n}","import React, { Component } from 'react';\nimport SignInForm from './SignInForm';\nimport SignUpForm from './SignUpForm';\nimport './UserDialog.css';\n\nexport default class UserDialog extends Component {\n    constructor() {\n        super();\n        this.state = {\n            selected: 'signIn'\n        }\n    }\n    changeSelected() {\n        this.setState({\n            selected: 'signUp'\n        })\n    }\n    render() {\n        return (\n            <div className=\"UserDialog-Wrapper\">\n                <div className=\"UserDialog\">\n                    <polygon fill=\"url(#linearGradient-2)\"\n                        points=\"69.4453125 8.90625 17.5546875 60.796875 34.8515625 78.09375 69.4453125 43.5 86.7421875 26.203125\"\n                        class=\"x-hidden-focus\"></polygon>\n                    <div className=\"title\">\n                        <h1>Microsoft To-Do</h1>\n                    </div>\n                    <div className=\"panes\">\n                        {this.state.selected === 'signIn' ?\n                            <SignInForm onChange={this.state.changeSelected} /> : <SignUpForm />}\n                    </div>\n                </div>\n            </div >\n        )\n    }\n}","import React, { Component } from 'react';\nimport TodoInput from './TodoInput';\nimport TodoItem from './TodoItem';\nimport UserDialog from './UserDialog'\nimport './App.css';\n\nlet id = 0;\nfunction idMaker() {\n  id += 1;\n  return id;\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      newTodo: '',\n      todoList: []\n    };\n  };\n  addTodo(e) {\n    this.state.todoList.push({\n      id: idMaker(),\n      title: e.target.value,\n      states: null,\n      deleted: false\n    })\n    this.setState({\n      newTodo: '',\n      todoList: this.state.todoList\n    })\n  }\n  changeTitle(e) {\n    this.setState({\n      newTodo: e.target.value,\n      todoList: this.state.todoList\n    })\n  }\n  toggle(e, todo) {\n    todo.status = todo.status === 'completed' ? '' : 'completed';\n    this.setState(this.state);\n  }\n  delete(e, todo) {\n    todo.deleted = true;\n    this.setState(this.state);\n  }\n  render() {\n    let todos = this.state.todoList\n      .filter((item) => !item.deleted)\n      .map((item, index) => {\n        return (\n          <li key={index}>\n            <TodoItem\n              todo={item}\n              onToggle={this.toggle.bind(this)}\n              onDelete={this.delete.bind(this)} />\n          </li>\n        );\n      })\n    return (\n      <div className=\"App\">\n        <div className=\"head\">\n          <div className=\"navbar\"></div>\n        </div>\n        <div className=\"main\">\n          <div className=\"sidebar\"></div>\n          <div className=\"contentWrapper\">\n            <h2>任务</h2>\n            <div className=\"content\">\n              <ol>\n                {todos}\n              </ol>\n              <div className=\"inputWrapper\">\n                <TodoInput\n                  content={this.state.newTodo}\n                  onSubmit={this.addTodo.bind(this)}\n                  onChange={this.changeTitle.bind(this)} />\n              </div>\n            </div>\n          </div>\n        </div>\n        <UserDialog />\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}